apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-conteiner
  labels:
    app: kube-conteiner
spec:
  replicas: 3
  minReadySeconds: 6
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: http-server-kube
  template:
    metadata:
      labels:
        app: http-server-kube
    spec:
      containers:
      - name: kube-app
        image: davtyan111/compose_template2
        ports:
        - name: http
          containerPort: 3000
        - name: https
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:   
          tcpSocket:       
            port: 3000         
          initialDelaySeconds: 15 
          periodSeconds: 10 
          timeoutSeconds: 1 
          successThreshold: 1
          failureThreshold: 3   

---

apiVersion: v1
kind: Service
metadata:
  name: kube-service
spec:
  selector:
    app: http-server-kube
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - davtyan.click
    secretName: luizas-tls
  rules:
   - host: davtyan.click
     http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: kube-service
                port: 
                  number: 80
